<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__wave_solver_8cpp_source" xml:lang="en-US">
<title>WaveSolver.cpp</title>
<indexterm><primary>AS/WaveSolver.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__wave_solver_8cpp_source_1l00001"/>00001 
<anchor xml:id="__wave_solver_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#define&#32;_USE_MATH_DEFINES</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&lt;iostream&gt;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&lt;string&gt;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&lt;mpi.h&gt;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&lt;sstream&gt;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;fstream&gt;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&lt;cmath&gt;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00009"/>00009 
<anchor xml:id="__wave_solver_8cpp_source_1l00010"/>00010 
<anchor xml:id="__wave_solver_8cpp_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&quot;WaveSolver.h&quot;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&quot;Parameters.h&quot;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00013"/>00013 
<anchor xml:id="__wave_solver_8cpp_source_1l00014"/>00014 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="__wave_solver_8cpp_source_1l00015"/>00015 
<anchor xml:id="__wave_solver_8cpp_source_1l00016"/>00016 <emphasis role="keywordtype">void</emphasis>&#32;readWaveSolverParameters(<emphasis role="keywordtype">int</emphasis>&#32;&amp;i&#32;,&#32;<emphasis role="keywordtype">int</emphasis>&#32;&amp;j&#32;,&#32;<emphasis role="keywordtype">double</emphasis>&#32;&amp;x_m,&#32;<emphasis role="keywordtype">double</emphasis>&#32;&amp;y_m,&#32;<emphasis role="keywordtype">double</emphasis>&#32;&amp;tee,&#32;<emphasis role="keywordtype">double</emphasis>&#32;&amp;t_m,<emphasis role="keywordtype">double</emphasis>&#32;&amp;dt_o&#32;,&#32;<emphasis role="keywordtype">double</emphasis>&#32;&amp;cee&#32;,&#32;<emphasis role="keywordtype">int</emphasis>&#32;&amp;bo,<emphasis role="keywordtype">double</emphasis>&#32;&amp;dist,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*disturbance_p)
<anchor xml:id="__wave_solver_8cpp_source_1l00017"/>00017 {
<anchor xml:id="__wave_solver_8cpp_source_1l00018"/>00018 
<anchor xml:id="__wave_solver_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;stringstream&#32;data;
<anchor xml:id="__wave_solver_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;data&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Parameters.txt&quot;</emphasis>;
<anchor xml:id="__wave_solver_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;ifstream&#32;file;
<anchor xml:id="__wave_solver_8cpp_source_1l00022"/>00022 
<anchor xml:id="__wave_solver_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Open&#32;Parameters&#32;file</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;file.open(data.str().c_str(),&#32;ios_base::in);
<anchor xml:id="__wave_solver_8cpp_source_1l00025"/>00025 
<anchor xml:id="__wave_solver_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Read&#32;in&#32;value&#32;by&#32;value</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(file.good())
<anchor xml:id="__wave_solver_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file&#32;&gt;&gt;&#32;i&#32;&gt;&gt;&#32;j&#32;&gt;&gt;&#32;x_m&#32;&gt;&gt;&#32;y_m&#32;&gt;&gt;&#32;t&#32;&gt;&gt;&#32;t_m&#32;&gt;&gt;&#32;dt_o&#32;&gt;&gt;&#32;c&#32;&gt;&gt;&#32;bo&#32;&gt;&gt;&#32;dist;
<anchor xml:id="__wave_solver_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00031"/>00031 
<anchor xml:id="__wave_solver_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;distrbance&#32;array&#32;with&#32;3&#32;parameters(radius,&#32;x&#32;loc,&#32;y&#32;loc)</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;disturbance_p&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>[dist&#32;*&#32;3];
<anchor xml:id="__wave_solver_8cpp_source_1l00034"/>00034 
<anchor xml:id="__wave_solver_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(file.good())
<anchor xml:id="__wave_solver_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Fill&#32;te&#32;disturbance&#32;array&#32;with&#32;the&#32;3&#32;parameters</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;3&#32;*&#32;dist;&#32;i++)
<anchor xml:id="__wave_solver_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file&#32;&gt;&gt;&#32;disturbance_p[i];
<anchor xml:id="__wave_solver_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;file.close();
<anchor xml:id="__wave_solver_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;i&#32;&lt;&lt;&#32;j;
<anchor xml:id="__wave_solver_8cpp_source_1l00045"/>00045 }
<anchor xml:id="__wave_solver_8cpp_source_1l00046"/>00046 
<anchor xml:id="__wave_solver_8cpp_source_1l00047"/>00047 <emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00048"/>00048 <emphasis role="comment">//&#32;Select&#32;Boundary</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00049"/>00049 <emphasis role="keywordtype">void</emphasis>&#32;selectBoundary(<link linkend="_class_domain">Domain&lt;double&gt;</link>&#32;&amp;Dom,&#32;<emphasis role="keywordtype">int</emphasis>&#32;boundary)
<anchor xml:id="__wave_solver_8cpp_source_1l00050"/>00050 {
<anchor xml:id="__wave_solver_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(boundary&#32;==&#32;0)
<anchor xml:id="__wave_solver_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dirichlitBoundary(Dom);
<anchor xml:id="__wave_solver_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(boundary&#32;==&#32;1)
<anchor xml:id="__wave_solver_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;neumannBouandry(Dom);
<anchor xml:id="__wave_solver_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00059"/>00059 
<anchor xml:id="__wave_solver_8cpp_source_1l00060"/>00060 }
<anchor xml:id="__wave_solver_8cpp_source_1l00061"/>00061 
<anchor xml:id="__wave_solver_8cpp_source_1l00062"/>00062 <emphasis role="comment">//&#32;Set&#32;Dirichlit&#32;Boundry&#32;Conditions</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00063"/>00063 <emphasis role="keywordtype">void</emphasis>&#32;dirichlitBoundary(<link linkend="_class_domain">Domain&lt;double&gt;</link>&amp;&#32;Dom)
<anchor xml:id="__wave_solver_8cpp_source_1l00064"/>00064 {
<anchor xml:id="__wave_solver_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;left&#32;neighbours&#32;dont&#32;exist</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Dom.neighbours[0]&#32;==&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;left&#32;boundaries</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;Dom.sub_imax&#32;-&#32;1;&#32;i++)
<anchor xml:id="__wave_solver_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.current_grid_2d[i][0]&#32;=&#32;0;
<anchor xml:id="__wave_solver_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00074"/>00074 
<anchor xml:id="__wave_solver_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;right&#32;neighbours&#32;dont&#32;exist</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Dom.neighbours[2]&#32;==&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;right&#32;boundaries&#32;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;Dom.sub_imax&#32;-&#32;1;&#32;i++)
<anchor xml:id="__wave_solver_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.current_grid_2d[i][Dom.sub_jmax&#32;-&#32;1]&#32;=&#32;0;
<anchor xml:id="__wave_solver_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="comment">//If&#32;the&#32;top&#32;neighbours&#32;dont&#32;exist</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Dom.neighbours[1]&#32;==&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;top&#32;boundaries&#32;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;Dom.sub_jmax&#32;-&#32;1;&#32;i++)
<anchor xml:id="__wave_solver_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.current_grid_2d[1][i]&#32;=&#32;0;
<anchor xml:id="__wave_solver_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00094"/>00094 
<anchor xml:id="__wave_solver_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;bottom&#32;neighbours&#32;dont&#32;exist</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Dom.neighbours[3]&#32;==&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;bottom&#32;boundaries</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;Dom.sub_jmax&#32;-&#32;1;&#32;i++)
<anchor xml:id="__wave_solver_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.current_grid_2d[Dom.sub_imax&#32;-&#32;1][i]&#32;=&#32;0;
<anchor xml:id="__wave_solver_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00104"/>00104 }
<anchor xml:id="__wave_solver_8cpp_source_1l00105"/>00105 
<anchor xml:id="__wave_solver_8cpp_source_1l00106"/>00106 <emphasis role="comment">//&#32;Set&#32;Neumann&#32;Boundary&#32;Conditions</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00107"/>00107 <emphasis role="keywordtype">void</emphasis>&#32;neumannBouandry(<link linkend="_class_domain">Domain&lt;double&gt;</link>&amp;&#32;Dom)
<anchor xml:id="__wave_solver_8cpp_source_1l00108"/>00108 {
<anchor xml:id="__wave_solver_8cpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;left&#32;neighbours&#32;dont&#32;exist</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Dom.neighbours[0]&#32;==&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;left&#32;boundaries</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;Dom.sub_imax&#32;-&#32;1;&#32;i++)
<anchor xml:id="__wave_solver_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.current_grid_2d[i][1]&#32;=&#32;Dom.current_grid_2d[i][2];
<anchor xml:id="__wave_solver_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00119"/>00119 
<anchor xml:id="__wave_solver_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;right&#32;neighbours&#32;dont&#32;exist</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Dom.neighbours[2]&#32;==&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;right&#32;boundaries</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;Dom.sub_imax&#32;-&#32;1;&#32;i++)
<anchor xml:id="__wave_solver_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.current_grid_2d[i][Dom.sub_jmax&#32;-&#32;1]&#32;=&#32;Dom.current_grid_2d[i][Dom.sub_jmax&#32;-&#32;2];
<anchor xml:id="__wave_solver_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00129"/>00129 
<anchor xml:id="__wave_solver_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<emphasis role="comment">//If&#32;the&#32;top&#32;neighbours&#32;dont&#32;exist</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Dom.neighbours[1]&#32;==&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;top&#32;boundaries&#32;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;Dom.sub_jmax&#32;-&#32;1;&#32;i++)
<anchor xml:id="__wave_solver_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.current_grid_2d[1][i]&#32;=&#32;Dom.current_grid_2d[2][i];
<anchor xml:id="__wave_solver_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00139"/>00139 
<anchor xml:id="__wave_solver_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;bottom&#32;neighbours&#32;dont&#32;exist</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Dom.neighbours[3]&#32;==&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;bottom&#32;boundaries</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;Dom.sub_jmax&#32;-&#32;1;&#32;i++)
<anchor xml:id="__wave_solver_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.current_grid_2d[Dom.sub_imax-1][i]&#32;=&#32;Dom.current_grid_2d[Dom.sub_imax&#32;-&#32;2][i];
<anchor xml:id="__wave_solver_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00149"/>00149 }
<anchor xml:id="__wave_solver_8cpp_source_1l00150"/>00150 
<anchor xml:id="__wave_solver_8cpp_source_1l00151"/>00151 
<anchor xml:id="__wave_solver_8cpp_source_1l00152"/>00152 <emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00153"/>00153 <emphasis role="comment">//&#32;Create&#32;Disturbance</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00154"/>00154 <emphasis role="keywordtype">void</emphasis>&#32;setInitialDisturbance(<link linkend="_class_domain">Domain&lt;double&gt;</link>&amp;&#32;Dom)
<anchor xml:id="__wave_solver_8cpp_source_1l00155"/>00155 {
<anchor xml:id="__wave_solver_8cpp_source_1l00156"/>00156 
<anchor xml:id="__wave_solver_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;an&#32;array&#32;to&#32;store&#32;x,y&#32;and&#32;radius&#32;for&#32;each&#32;disturbance</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;the&#32;grid&#32;spacing</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dx&#32;=&#32;x_max&#32;/&#32;(Dom.global_imax&#32;-&#32;1);
<anchor xml:id="__wave_solver_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dy&#32;=&#32;y_max&#32;/&#32;(Dom.global_jmax&#32;-&#32;1);
<anchor xml:id="__wave_solver_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;x_splash&#32;=&#32;3;
<anchor xml:id="__wave_solver_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;y_splash&#32;=&#32;3;
<anchor xml:id="__wave_solver_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;r_splash&#32;=&#32;1;
<anchor xml:id="__wave_solver_8cpp_source_1l00165"/>00165 
<anchor xml:id="__wave_solver_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Start&#32;looping&#32;on&#32;the&#32;non-padded&#32;region</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;Dom.sub_imax&#32;-&#32;1;&#32;i++)
<anchor xml:id="__wave_solver_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;1;&#32;j&#32;&lt;&#32;Dom.sub_jmax&#32;-&#32;1;&#32;j++)
<anchor xml:id="__wave_solver_8cpp_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00171"/>00171 
<anchor xml:id="__wave_solver_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;map&#32;global&#32;to&#32;local</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;I&#32;=&#32;(i&#32;-&#32;1)&#32;+&#32;Dom.global_i;
<anchor xml:id="__wave_solver_8cpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;J&#32;=&#32;(j&#32;-&#32;1)&#32;+&#32;Dom.global_j;
<anchor xml:id="__wave_solver_8cpp_source_1l00175"/>00175 
<anchor xml:id="__wave_solver_8cpp_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;set&#32;the&#32;grid&#32;jumps</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;x&#32;=&#32;dx&#32;*&#32;I;
<anchor xml:id="__wave_solver_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;y&#32;=&#32;dy&#32;*&#32;J;
<anchor xml:id="__wave_solver_8cpp_source_1l00179"/>00179 
<anchor xml:id="__wave_solver_8cpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;find&#32;the&#32;distance&#32;of&#32;a&#32;point&#32;from&#32;the&#32;splash</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;dist&#32;=&#32;sqrt(pow(x&#32;-&#32;x_splash,&#32;2.0)&#32;+&#32;pow(y&#32;-&#32;y_splash,&#32;2.0));
<anchor xml:id="__wave_solver_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;h&#32;=&#32;1;
<anchor xml:id="__wave_solver_8cpp_source_1l00183"/>00183 
<anchor xml:id="__wave_solver_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;the&#32;distance&#32;is&#32;within&#32;splash&#32;range,&#32;set&#32;the&#32;vlaues&#32;to&#32;calculated&#32;h</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dist&#32;&lt;&#32;r_splash)
<anchor xml:id="__wave_solver_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;calculate&#32;wave&#32;height</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;h&#32;=&#32;5.0&#32;*&#32;(cos(dist&#32;/&#32;r_splash&#32;*&#32;M_PI)&#32;+&#32;1.0);
<anchor xml:id="__wave_solver_8cpp_source_1l00189"/>00189 
<anchor xml:id="__wave_solver_8cpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//cout&#32;&lt;&lt;&#32;&quot;&#32;h&#32;&quot;&#32;&lt;&lt;&#32;h&#32;&lt;&lt;&#32;&quot;&#32;i&#32;&quot;&#32;&lt;&lt;&#32;i&#32;&lt;&lt;&#32;&quot;&#32;j&#32;&quot;&#32;&lt;&lt;&#32;j&#32;&lt;&lt;&#32;&quot;&#32;Dom.current_grid_2d[i][j]&#32;&quot;&#32;&lt;&lt;&#32;Dom.current_grid_2d[i][j]&#32;&lt;&lt;&#32;endl;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00191"/>00191 
<anchor xml:id="__wave_solver_8cpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;set&#32;the&#32;grid&#32;values</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.current_grid_2d[i][j]&#32;=&#32;h;
<anchor xml:id="__wave_solver_8cpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.old_grid_2d[i][j]&#32;=&#32;h;
<anchor xml:id="__wave_solver_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00196"/>00196 
<anchor xml:id="__wave_solver_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;if&#32;(id&#32;==&#32;5)</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00198"/>00198 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00199"/>00199 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;&quot;&#32;h&#32;&quot;&#32;&lt;&lt;&#32;h&#32;&lt;&lt;&#32;&quot;&#32;i&#32;&quot;&#32;&lt;&lt;&#32;i&#32;&lt;&lt;&#32;&quot;&#32;j&#32;&quot;&#32;&lt;&lt;&#32;j&#32;&lt;&lt;&#32;&quot;&#32;Dom.current_grid_2d[i][j]&#32;&quot;&#32;&lt;&lt;&#32;Dom.current_grid_2d[i][j]&#32;&lt;&lt;&#32;endl;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00200"/>00200 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}*/</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00203"/>00203 
<anchor xml:id="__wave_solver_8cpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;(id&#32;==&#32;0)</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;<emphasis role="comment">//{</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;cout&#32;&lt;&lt;&#32;&quot;&#32;OLD&#32;GRID&#32;AFTER&#32;DISTURBANCE&#32;&quot;&#32;&lt;&lt;&#32;endl;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;for&#32;(int&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;Dom.sub_imax&#32;-&#32;1;&#32;i++)</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(int&#32;j&#32;=&#32;1;&#32;j&#32;&lt;&#32;Dom.sub_jmax&#32;-&#32;1;&#32;j++)</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;Dom.old_grid_2d[i][j]&#32;&lt;&lt;&#32;&quot;&#32;&quot;;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;endl;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;cout&#32;&lt;&lt;&#32;endl;</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;<emphasis role="comment">//}</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00217"/>00217 }
<anchor xml:id="__wave_solver_8cpp_source_1l00218"/>00218 
<anchor xml:id="__wave_solver_8cpp_source_1l00219"/>00219 
<anchor xml:id="__wave_solver_8cpp_source_1l00220"/>00220 <emphasis role="keywordtype">void</emphasis>&#32;fillSubDomainsWithProcessId(<link linkend="_class_domain">Domain&lt;double&gt;</link>&amp;&#32;Dom)
<anchor xml:id="__wave_solver_8cpp_source_1l00221"/>00221 {
<anchor xml:id="__wave_solver_8cpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;Dom.sub_imax;&#32;i++)
<anchor xml:id="__wave_solver_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;Dom.sub_jmax;&#32;j++)
<anchor xml:id="__wave_solver_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.current_grid_2d[i][j]&#32;=&#32;id;
<anchor xml:id="__wave_solver_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00229"/>00229 }
<anchor xml:id="__wave_solver_8cpp_source_1l00230"/>00230 
<anchor xml:id="__wave_solver_8cpp_source_1l00231"/>00231 
<anchor xml:id="__wave_solver_8cpp_source_1l00232"/>00232 
<anchor xml:id="__wave_solver_8cpp_source_1l00233"/>00233 
<anchor xml:id="__wave_solver_8cpp_source_1l00234"/>00234 <emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00235"/>00235 <emphasis role="comment">//&#32;Function&#32;to&#32;do&#32;the&#32;communications</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00236"/>00236 <emphasis role="keywordtype">void</emphasis>&#32;doMPICommunications(<link linkend="_class_domain">Domain&lt;double&gt;</link>&#32;&amp;domain_instance,&#32;&#32;<link linkend="_class_m_p_i___data">MPI_Data&lt;double&gt;</link>&#32;&amp;MData,&#32;<emphasis role="keywordtype">int</emphasis>&#32;count,&#32;MPI_Request&#32;*request_list)
<anchor xml:id="__wave_solver_8cpp_source_1l00237"/>00237 {
<anchor xml:id="__wave_solver_8cpp_source_1l00238"/>00238 
<anchor xml:id="__wave_solver_8cpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;<emphasis role="comment">//--------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;SEND&#32;FROM&#32;REGULAR&#32;BOUNDARIES&#32;AND&#32;RECEIVE&#32;INTO&#32;GHOST&#32;BOUNDARIES</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;-------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Send&#32;the&#32;regualar&#32;cells&#32;of&#32;the&#32;sub-domain&#32;to&#32;the&#32;other&#32;processes</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00243"/>00243 
<anchor xml:id="__wave_solver_8cpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(domain_instance.neighbours[0]&#32;!=&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Receive&#32;left&#32;data&#32;in&#32;ghost&#32;cells</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MData.recv_data(domain_instance,&#32;MData.Left_Ghost_Type,&#32;domain_instance.neighbours[0],&#32;&amp;request_list[count]);
<anchor xml:id="__wave_solver_8cpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__wave_solver_8cpp_source_1l00249"/>00249 
<anchor xml:id="__wave_solver_8cpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Send&#32;left&#32;Data</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MData.send_data(domain_instance,&#32;MData.Left_Type,&#32;domain_instance.neighbours[0],&#32;&amp;request_list[count]);
<anchor xml:id="__wave_solver_8cpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__wave_solver_8cpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00254"/>00254 
<anchor xml:id="__wave_solver_8cpp_source_1l00255"/>00255 
<anchor xml:id="__wave_solver_8cpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(domain_instance.neighbours[2]&#32;!=&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Receive&#32;right&#32;data&#32;in&#32;ghost&#32;cells</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MData.recv_data(domain_instance,&#32;MData.Right_Ghost_Type,&#32;domain_instance.neighbours[2],&#32;&amp;request_list[count]);
<anchor xml:id="__wave_solver_8cpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__wave_solver_8cpp_source_1l00261"/>00261 
<anchor xml:id="__wave_solver_8cpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Send&#32;right&#32;data</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MData.send_data(domain_instance,&#32;MData.Right_Type,&#32;domain_instance.neighbours[2],&#32;&amp;request_list[count]);
<anchor xml:id="__wave_solver_8cpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__wave_solver_8cpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00266"/>00266 
<anchor xml:id="__wave_solver_8cpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(domain_instance.neighbours[1]&#32;!=&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Receive&#32;top&#32;data&#32;in&#32;ghost&#32;cells</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MData.recv_data(domain_instance,&#32;MData.Top_Ghost_Type,&#32;domain_instance.neighbours[1],&#32;&amp;request_list[count]);
<anchor xml:id="__wave_solver_8cpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__wave_solver_8cpp_source_1l00272"/>00272 
<anchor xml:id="__wave_solver_8cpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Send&#32;top&#32;data</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MData.send_data(domain_instance,&#32;MData.Top_Type,&#32;domain_instance.neighbours[1],&#32;&amp;request_list[count]);
<anchor xml:id="__wave_solver_8cpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__wave_solver_8cpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00277"/>00277 
<anchor xml:id="__wave_solver_8cpp_source_1l00278"/>00278 
<anchor xml:id="__wave_solver_8cpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(domain_instance.neighbours[3]&#32;!=&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Receive&#32;bottom&#32;data&#32;in&#32;ghost&#32;cells</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MData.recv_data(domain_instance,&#32;MData.Bottom_Ghost_Type,&#32;domain_instance.neighbours[3],&#32;&amp;request_list[count]);
<anchor xml:id="__wave_solver_8cpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__wave_solver_8cpp_source_1l00284"/>00284 
<anchor xml:id="__wave_solver_8cpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Send&#32;bottom&#32;data</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MData.send_data(domain_instance,&#32;MData.Bottom_Type,&#32;domain_instance.neighbours[3],&#32;&amp;request_list[count]);
<anchor xml:id="__wave_solver_8cpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__wave_solver_8cpp_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00289"/>00289 
<anchor xml:id="__wave_solver_8cpp_source_1l00290"/>00290 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(boundary&#32;==&#32;2)&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//--------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;ADDITIONAL&#32;PERIODIC&#32;COMMUNICATIONS&#32;ON&#32;THE&#32;TOP&#32;AND&#32;BOTTOM</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//--------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Send&#32;top&#32;data</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MData.send_data(domain_instance,&#32;MData.Top_Type,&#32;domain_instance.neighbours[1],&#32;&amp;request_list[count]);
<anchor xml:id="__wave_solver_8cpp_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__wave_solver_8cpp_source_1l00298"/>00298 
<anchor xml:id="__wave_solver_8cpp_source_1l00299"/>00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Receive&#32;bottom&#32;data&#32;in&#32;ghost&#32;cells</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MData.recv_data(domain_instance,&#32;MData.Bottom_Ghost_Type,&#32;domain_instance.neighbours[1],&#32;&amp;request_list[count]);
<anchor xml:id="__wave_solver_8cpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__wave_solver_8cpp_source_1l00302"/>00302 
<anchor xml:id="__wave_solver_8cpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//--------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00304"/>00304 
<anchor xml:id="__wave_solver_8cpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Receive&#32;top&#32;data&#32;in&#32;ghost&#32;cells</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MData.recv_data(domain_instance,&#32;MData.Top_Ghost_Type,&#32;domain_instance.neighbours[1],&#32;&amp;request_list[count]);
<anchor xml:id="__wave_solver_8cpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__wave_solver_8cpp_source_1l00308"/>00308 
<anchor xml:id="__wave_solver_8cpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Send&#32;bottom&#32;data</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MData.send_data(domain_instance,&#32;MData.Bottom_Type,&#32;domain_instance.neighbours[3],&#32;&amp;request_list[count]);
<anchor xml:id="__wave_solver_8cpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__wave_solver_8cpp_source_1l00312"/>00312 
<anchor xml:id="__wave_solver_8cpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;MPI_Waitall(count,&#32;request_list,&#32;MPI_STATUSES_IGNORE);
<anchor xml:id="__wave_solver_8cpp_source_1l00315"/>00315 
<anchor xml:id="__wave_solver_8cpp_source_1l00316"/>00316 }
<anchor xml:id="__wave_solver_8cpp_source_1l00317"/>00317 
<anchor xml:id="__wave_solver_8cpp_source_1l00318"/>00318 
<anchor xml:id="__wave_solver_8cpp_source_1l00319"/>00319 <emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00320"/>00320 <emphasis role="comment">//&#32;Solve&#32;inner&#32;domain</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00321"/>00321 <emphasis role="keywordtype">void</emphasis>&#32;doInnerIterations(<link linkend="_class_domain">Domain&lt;double&gt;</link>&#32;&amp;Dom)&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00322"/>00322 {
<anchor xml:id="__wave_solver_8cpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Iterate&#32;over&#32;the&#32;innder&#32;domain&#32;in&#32;both&#32;i&#32;and&#32;j&#32;directions</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;2;&#32;i&#32;&lt;&#32;Dom.sub_imax&#32;-&#32;1;&#32;i++)
<anchor xml:id="__wave_solver_8cpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;2;&#32;j&#32;&lt;&#32;Dom.sub_jmax&#32;-&#32;1;&#32;j++)
<anchor xml:id="__wave_solver_8cpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Descretization&#32;of&#32;equation&#32;of&#32;the&#32;wave&#32;for&#32;time&#32;stepping&#32;in&#32;the&#32;inner&#32;domain</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.new_grid_2d[i][j]&#32;=&#32;pow(dt&#32;*&#32;c,&#32;2.0)&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;((Dom.current_grid_2d[i&#32;+&#32;1][j]&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;2.0&#32;*&#32;Dom.current_grid_2d[i][j]&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;Dom.current_grid_2d[i&#32;-&#32;1][j])&#32;/&#32;pow(dx,&#32;2.0)
<anchor xml:id="__wave_solver_8cpp_source_1l00333"/>00333 
<anchor xml:id="__wave_solver_8cpp_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;(Dom.current_grid_2d[i][j&#32;+&#32;1]&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;2.0&#32;*&#32;Dom.current_grid_2d[i][j]&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;Dom.current_grid_2d[i][j&#32;-&#32;1])&#32;/&#32;pow(dy,&#32;2.0))&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00337"/>00337 
<anchor xml:id="__wave_solver_8cpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;2.0&#32;*&#32;Dom.current_grid_2d[i][j]&#32;-&#32;Dom.old_grid_2d[i][j];
<anchor xml:id="__wave_solver_8cpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00341"/>00341 }
<anchor xml:id="__wave_solver_8cpp_source_1l00342"/>00342 
<anchor xml:id="__wave_solver_8cpp_source_1l00343"/>00343 <emphasis role="comment">//&#32;Solve&#32;outer&#32;domain</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00344"/>00344 <emphasis role="keywordtype">void</emphasis>&#32;doBoundaryIterations(<link linkend="_class_domain">Domain&lt;double&gt;</link>&amp;&#32;Dom)
<anchor xml:id="__wave_solver_8cpp_source_1l00345"/>00345 {
<anchor xml:id="__wave_solver_8cpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;LEFT&#32;BOUNDARY</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Dom.neighbours[0]&#32;!=&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;Dom.sub_imax-1;&#32;i++)
<anchor xml:id="__wave_solver_8cpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.new_grid_2d[i][1]&#32;=&#32;pow(dt&#32;*&#32;c,&#32;2.0)&#32;*&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((Dom.current_grid_2d[i&#32;+&#32;1][1]&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;2.0&#32;*&#32;Dom.current_grid_2d[i][1]&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;Dom.current_grid_2d[i&#32;-&#32;1][1])&#32;/&#32;pow(dx,&#32;2.0)
<anchor xml:id="__wave_solver_8cpp_source_1l00355"/>00355 
<anchor xml:id="__wave_solver_8cpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;(Dom.current_grid_2d[i][2]&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;2.0&#32;*&#32;Dom.current_grid_2d[i][1]&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;Dom.current_grid_2d[i][0])&#32;/&#32;pow(dy,&#32;2.0))&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00359"/>00359 
<anchor xml:id="__wave_solver_8cpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;2.0&#32;*&#32;Dom.current_grid_2d[i][1]&#32;-&#32;Dom.old_grid_2d[i][1];
<anchor xml:id="__wave_solver_8cpp_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00363"/>00363 
<anchor xml:id="__wave_solver_8cpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;TOP&#32;BOUNDARY</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00365"/>00365 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Dom.neighbours[1]&#32;!=&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00366"/>00366 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;1;&#32;j&#32;&lt;&#32;Dom.sub_jmax&#32;-1;&#32;j++)
<anchor xml:id="__wave_solver_8cpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.new_grid_2d[1][j]&#32;=&#32;pow(dt&#32;*&#32;c,&#32;2.0)&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;((Dom.current_grid_2d[2][j]&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;2.0&#32;*&#32;Dom.current_grid_2d[1][j]&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;Dom.current_grid_2d[0][j])&#32;/&#32;pow(dx,&#32;2.0)
<anchor xml:id="__wave_solver_8cpp_source_1l00373"/>00373 
<anchor xml:id="__wave_solver_8cpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;(Dom.current_grid_2d[1][j&#32;+&#32;1]&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;2.0&#32;*&#32;Dom.current_grid_2d[1][j]&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;Dom.current_grid_2d[1][j&#32;-&#32;1])&#32;/&#32;pow(dy,&#32;2.0))&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00377"/>00377 
<anchor xml:id="__wave_solver_8cpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;2.0&#32;*&#32;Dom.current_grid_2d[1][j]&#32;-&#32;Dom.old_grid_2d[1][j];
<anchor xml:id="__wave_solver_8cpp_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00381"/>00381 
<anchor xml:id="__wave_solver_8cpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;RIGHT&#32;BOUNDARY</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Dom.neighbours[2]&#32;!=&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00384"/>00384 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;Dom.sub_imax&#32;-&#32;1;&#32;i++)
<anchor xml:id="__wave_solver_8cpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.new_grid_2d[i][Dom.sub_jmax-1]&#32;=&#32;pow(dt&#32;*&#32;c,&#32;2.0)&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;((Dom.current_grid_2d[i&#32;+&#32;1][Dom.sub_jmax-1]&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;2.0&#32;*&#32;Dom.current_grid_2d[i][Dom.sub_jmax&#32;-&#32;1]
<anchor xml:id="__wave_solver_8cpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;Dom.current_grid_2d[i&#32;-&#32;1][Dom.sub_jmax&#32;-&#32;1])&#32;/&#32;pow(dx,&#32;2.0)&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00391"/>00391 
<anchor xml:id="__wave_solver_8cpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;(Dom.current_grid_2d[i][Dom.sub_jmax&#32;-&#32;1]&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;2.0&#32;*&#32;Dom.current_grid_2d[i][Dom.sub_jmax&#32;-&#32;1]
<anchor xml:id="__wave_solver_8cpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;Dom.current_grid_2d[i][Dom.sub_jmax&#32;-&#32;2])&#32;/&#32;pow(dy,&#32;2.0))&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00395"/>00395 
<anchor xml:id="__wave_solver_8cpp_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;2.0&#32;*&#32;Dom.current_grid_2d[i][Dom.sub_jmax&#32;-&#32;1]&#32;-&#32;Dom.old_grid_2d[i][Dom.sub_jmax&#32;-&#32;1];
<anchor xml:id="__wave_solver_8cpp_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00398"/>00398 
<anchor xml:id="__wave_solver_8cpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00400"/>00400 
<anchor xml:id="__wave_solver_8cpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;BOTTOM&#32;BOUNDARY</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(Dom.neighbours[3]&#32;!=&#32;-1)
<anchor xml:id="__wave_solver_8cpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;1;&#32;j&#32;&lt;&#32;Dom.sub_jmax-1;&#32;j++)
<anchor xml:id="__wave_solver_8cpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Dom.new_grid_2d[Dom.sub_imax-1][j]&#32;=&#32;pow(dt&#32;*&#32;c,&#32;2.0)&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;((Dom.current_grid_2d[Dom.sub_imax&#32;-&#32;1][j]&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;2.0&#32;*&#32;Dom.current_grid_2d[Dom.sub_imax&#32;-&#32;1][j]
<anchor xml:id="__wave_solver_8cpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;Dom.current_grid_2d[Dom.sub_imax&#32;-&#32;2][j])&#32;/&#32;pow(dx,&#32;2.0)&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00410"/>00410 
<anchor xml:id="__wave_solver_8cpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;(Dom.current_grid_2d[Dom.sub_imax&#32;-&#32;1][j&#32;+&#32;1]
<anchor xml:id="__wave_solver_8cpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;2.0&#32;*&#32;Dom.current_grid_2d[Dom.sub_imax&#32;-&#32;1][j]
<anchor xml:id="__wave_solver_8cpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;Dom.current_grid_2d[Dom.sub_imax&#32;-&#32;1][j&#32;-&#32;1])&#32;/&#32;pow(dy,&#32;2.0))&#32;
<anchor xml:id="__wave_solver_8cpp_source_1l00414"/>00414 
<anchor xml:id="__wave_solver_8cpp_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;2.0&#32;*&#32;Dom.current_grid_2d[Dom.sub_imax&#32;-&#32;1][j]&#32;-&#32;Dom.old_grid_2d[Dom.sub_imax&#32;-&#32;1][j];
<anchor xml:id="__wave_solver_8cpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00417"/>00417 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00418"/>00418 
<anchor xml:id="__wave_solver_8cpp_source_1l00419"/>00419 }
<anchor xml:id="__wave_solver_8cpp_source_1l00420"/>00420 
<anchor xml:id="__wave_solver_8cpp_source_1l00421"/>00421 
<anchor xml:id="__wave_solver_8cpp_source_1l00422"/>00422 <emphasis role="comment">//&#32;Output&#32;files&#32;after&#32;iterations&#32;for&#32;postprocessing</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00423"/>00423 <emphasis role="keywordtype">void</emphasis>&#32;grid_to_file(<link linkend="_class_domain">Domain&lt;double&gt;</link>&amp;&#32;Dom,&#32;<emphasis role="keywordtype">int</emphasis>&#32;out,&#32;<emphasis role="keywordtype">int</emphasis>&#32;boundary)
<anchor xml:id="__wave_solver_8cpp_source_1l00424"/>00424 {
<anchor xml:id="__wave_solver_8cpp_source_1l00425"/>00425 
<anchor xml:id="__wave_solver_8cpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Function&#32;that&#32;uses&#32;fstream&#32;to&#32;write&#32;variable&#32;to&#32;the&#32;file</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00427"/>00427 &#32;&#32;&#32;&#32;stringstream&#32;fname;
<anchor xml:id="__wave_solver_8cpp_source_1l00428"/>00428 &#32;&#32;&#32;&#32;fstream&#32;f1;
<anchor xml:id="__wave_solver_8cpp_source_1l00429"/>00429 
<anchor xml:id="__wave_solver_8cpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Outputting&#32;into&#32;folders&#32;according&#32;to&#32;the&#32;boundary&#32;condition&#32;and&#32;number</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00431"/>00431 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(boundary&#32;==&#32;1)
<anchor xml:id="__wave_solver_8cpp_source_1l00432"/>00432 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fname&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;./output/neumann/&quot;</emphasis>&lt;&lt;&#32;p&#32;&lt;&lt;<emphasis role="stringliteral">&quot;_processors/&quot;</emphasis>&lt;&lt;<emphasis role="stringliteral">&quot;output_&quot;</emphasis>&#32;&lt;&lt;&#32;out&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;_id_&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="keywordtype">id</emphasis>&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;.dat&quot;</emphasis>;
<anchor xml:id="__wave_solver_8cpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(boundary&#32;==&#32;0)
<anchor xml:id="__wave_solver_8cpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fname&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;./output/dirichlit/&quot;</emphasis>&#32;&lt;&lt;&#32;p&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;_processors/&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;output_&quot;</emphasis>&#32;&lt;&lt;&#32;out&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;_id_&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="keywordtype">id</emphasis>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;.dat&quot;</emphasis>;
<anchor xml:id="__wave_solver_8cpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(boundary&#32;==&#32;2)
<anchor xml:id="__wave_solver_8cpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fname&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;./output/periodic/&quot;</emphasis>&#32;&lt;&lt;&#32;p&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;_processors/&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;output_&quot;</emphasis>&#32;&lt;&lt;&#32;out&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;_id_&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="keywordtype">id</emphasis>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;.dat&quot;</emphasis>;
<anchor xml:id="__wave_solver_8cpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00443"/>00443 
<anchor xml:id="__wave_solver_8cpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Open&#32;and&#32;write&#32;contents&#32;of&#32;each&#32;processor&#32;to&#32;the&#32;respective&#32;files</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;f1.open(fname.str().c_str(),&#32;ios_base::out);
<anchor xml:id="__wave_solver_8cpp_source_1l00446"/>00446 
<anchor xml:id="__wave_solver_8cpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;Dom.sub_imax&#32;-&#32;1;&#32;i++)
<anchor xml:id="__wave_solver_8cpp_source_1l00448"/>00448 &#32;&#32;&#32;&#32;{
<anchor xml:id="__wave_solver_8cpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Writing&#32;contents&#32;of&#32;processsor&#32;grid&#32;to&#32;file</emphasis>
<anchor xml:id="__wave_solver_8cpp_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;1;&#32;j&#32;&lt;&#32;Dom.sub_jmax&#32;-&#32;1;&#32;j++)
<anchor xml:id="__wave_solver_8cpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f1&#32;&lt;&lt;&#32;Dom.current_grid_2d[i][j]&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\t&quot;</emphasis>;
<anchor xml:id="__wave_solver_8cpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f1&#32;&lt;&lt;&#32;endl;
<anchor xml:id="__wave_solver_8cpp_source_1l00453"/>00453 &#32;&#32;&#32;&#32;}
<anchor xml:id="__wave_solver_8cpp_source_1l00454"/>00454 &#32;&#32;&#32;&#32;f1.close();
<anchor xml:id="__wave_solver_8cpp_source_1l00455"/>00455 }
</programlisting></section>
