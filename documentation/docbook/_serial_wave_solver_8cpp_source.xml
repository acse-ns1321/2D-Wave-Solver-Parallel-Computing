<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__serial_wave_solver_8cpp_source" xml:lang="en-US">
<title>SerialWaveSolver.cpp</title>
<indexterm><primary>AS/SerialWaveSolver.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__serial_wave_solver_8cpp_source_1l00001"/>00001 <emphasis role="comment">//#define&#32;_USE_MATH_DEFINES</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00002"/>00002 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00003"/>00003 <emphasis role="comment">//#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00004"/>00004 <emphasis role="comment">//#include&#32;&lt;sstream&gt;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00005"/>00005 <emphasis role="comment">//#include&#32;&lt;fstream&gt;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00006"/>00006 <emphasis role="comment">//#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00007"/>00007 <emphasis role="comment">//#include&#32;&lt;cmath&gt;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00008"/>00008 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00009"/>00009 <emphasis role="comment">//using&#32;namespace&#32;std;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00010"/>00010 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00012"/>00012 <emphasis role="comment"></emphasis><emphasis role="comment">//vector&lt;vector&lt;double&gt;&gt;&#32;grid,&#32;new_grid,&#32;old_grid;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00013"/>00013 <emphasis role="comment">//int&#32;imax&#32;=&#32;100,&#32;jmax&#32;=&#32;100;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00014"/>00014 <emphasis role="comment">//double&#32;t_max&#32;=&#32;30.0;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00015"/>00015 <emphasis role="comment">//double&#32;t,&#32;t_out&#32;=&#32;0.0,&#32;dt_out&#32;=&#32;0.04,&#32;dt;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00016"/>00016 <emphasis role="comment">//double&#32;y_max&#32;=&#32;10.0,&#32;x_max&#32;=&#32;10.0,&#32;dx,&#32;dy;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00017"/>00017 <emphasis role="comment">//double&#32;c&#32;=&#32;1;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00018"/>00018 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00019"/>00019 <emphasis role="comment">//void&#32;grid_to_file(int&#32;out)</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00020"/>00020 <emphasis role="comment">//{</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00021"/>00021 <emphasis role="comment">//&#32;&#32;stringstream&#32;fname;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00022"/>00022 <emphasis role="comment">//&#32;&#32;fstream&#32;f1;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00023"/>00023 <emphasis role="comment">//&#32;&#32;fname&#32;&lt;&lt;&#32;&quot;./output/serial/output&quot;&#32;&lt;&lt;&#32;&quot;_&quot;&#32;&lt;&lt;&#32;out&#32;&lt;&lt;&#32;&quot;.dat&quot;;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00024"/>00024 <emphasis role="comment">//&#32;&#32;f1.open(fname.str().c_str(),&#32;ios_base::out);</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00025"/>00025 <emphasis role="comment">//&#32;&#32;for&#32;(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;imax;&#32;i++)</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00026"/>00026 <emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00027"/>00027 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(int&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;jmax;&#32;j++)</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00028"/>00028 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;f1&#32;&lt;&lt;&#32;grid[i][j]&#32;&lt;&lt;&#32;&quot;\t&quot;;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00029"/>00029 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;f1&#32;&lt;&lt;&#32;endl;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00030"/>00030 <emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00031"/>00031 <emphasis role="comment">//&#32;&#32;f1.close();</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00032"/>00032 <emphasis role="comment">//}</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00033"/>00033 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00034"/>00034 <emphasis role="comment">//void&#32;do_iteration(void)</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00035"/>00035 <emphasis role="comment">//{</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00036"/>00036 <emphasis role="comment">//&#32;&#32;//&#32;&#32;Updating&#32;inner&#32;part&#32;of&#32;the&#32;domain</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00037"/>00037 <emphasis role="comment">//&#32;&#32;for&#32;(int&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;imax&#32;-&#32;1;&#32;i++)</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00038"/>00038 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(int&#32;j&#32;=&#32;1;&#32;j&#32;&lt;&#32;jmax&#32;-&#32;1;&#32;j++)</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00039"/>00039 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_grid[i][j]&#32;=&#32;pow(dt&#32;*&#32;c,&#32;2.0)&#32;*&#32;((grid[i&#32;+&#32;1][j]&#32;-&#32;2.0&#32;*&#32;grid[i][j]&#32;+&#32;grid[i&#32;-&#32;1][j])&#32;/&#32;pow(dx,&#32;2.0)&#32;+&#32;(grid[i][j&#32;+&#32;1]&#32;-&#32;2.0&#32;*&#32;grid[i][j]&#32;+&#32;grid[i][j&#32;-&#32;1])&#32;/&#32;pow(dy,&#32;2.0))&#32;+&#32;2.0&#32;*&#32;grid[i][j]&#32;-&#32;old_grid[i][j];</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00040"/>00040 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00041"/>00041 <emphasis role="comment">//&#32;&#32;//&#32;Updating&#32;the&#32;outer&#32;columns&#32;of&#32;the&#32;domain</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00042"/>00042 <emphasis role="comment">//&#32;&#32;for&#32;(int&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;imax;&#32;i++)</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00043"/>00043 <emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00044"/>00044 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;new_grid[i][0]&#32;=&#32;new_grid[i][1];</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00045"/>00045 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;new_grid[i][jmax&#32;-&#32;1]&#32;=&#32;new_grid[i][jmax&#32;-&#32;2];</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00046"/>00046 <emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00047"/>00047 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00048"/>00048 <emphasis role="comment">//&#32;&#32;//&#32;Updating&#32;the&#32;rows&#32;of&#32;the&#32;domain</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00049"/>00049 <emphasis role="comment">//&#32;&#32;for&#32;(int&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;jmax;&#32;j++)</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00050"/>00050 <emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00051"/>00051 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;new_grid[0][j]&#32;=&#32;new_grid[1][j];</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00052"/>00052 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;new_grid[imax&#32;-&#32;1][j]&#32;=&#32;new_grid[imax&#32;-&#32;2][j];</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00053"/>00053 <emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00054"/>00054 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00055"/>00055 <emphasis role="comment">//&#32;&#32;//&#32;Updating&#32;the&#32;time-step</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00056"/>00056 <emphasis role="comment">//&#32;&#32;t&#32;+=&#32;dt;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00057"/>00057 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00058"/>00058 <emphasis role="comment">//&#32;&#32;old_grid.swap(new_grid);&#32;//&#32;swap&#32;elements&#32;of&#32;old&#32;grid&#32;with&#32;new&#32;grid</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00059"/>00059 <emphasis role="comment">//&#32;&#32;old_grid.swap(grid);&#32;//&#32;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00060"/>00060 <emphasis role="comment">//}</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00061"/>00061 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00062"/>00062 <emphasis role="comment">//int&#32;main(int&#32;argc,&#32;char*&#32;argv[])</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00063"/>00063 <emphasis role="comment">//{</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00064"/>00064 <emphasis role="comment">//&#32;&#32;old_grid.resize(imax,&#32;vector&lt;double&gt;(jmax));</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00065"/>00065 <emphasis role="comment">//&#32;&#32;grid.resize(imax,&#32;vector&lt;double&gt;(jmax));</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00066"/>00066 <emphasis role="comment">//&#32;&#32;new_grid.resize(imax,&#32;vector&lt;double&gt;(jmax));</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00067"/>00067 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00068"/>00068 <emphasis role="comment">//&#32;&#32;dx&#32;=&#32;x_max&#32;/&#32;((double)imax&#32;-&#32;1);</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00069"/>00069 <emphasis role="comment">//&#32;&#32;dy&#32;=&#32;y_max&#32;/&#32;((double)imax&#32;-&#32;1);</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00070"/>00070 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00071"/>00071 <emphasis role="comment">//&#32;&#32;t&#32;=&#32;0.0;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00072"/>00072 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00073"/>00073 <emphasis role="comment">//&#32;&#32;dt&#32;=&#32;0.1&#32;*&#32;min(dx,&#32;dy)&#32;/&#32;c;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00074"/>00074 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00075"/>00075 <emphasis role="comment">//&#32;&#32;int&#32;out_cnt&#32;=&#32;0,&#32;it&#32;=&#32;0;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00076"/>00076 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00077"/>00077 <emphasis role="comment">//&#32;&#32;grid_to_file(out_cnt);</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00078"/>00078 <emphasis role="comment">//&#32;&#32;out_cnt++;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00079"/>00079 <emphasis role="comment">//&#32;&#32;t_out&#32;+=&#32;dt_out;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00080"/>00080 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00081"/>00081 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00082"/>00082 <emphasis role="comment">//&#32;&#32;//sets&#32;half&#32;sinusoidal&#32;intitial&#32;disturbance&#32;-&#32;this&#32;is&#32;brute&#32;force&#32;-&#32;it&#32;can&#32;be&#32;done&#32;more&#32;elegantly</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00083"/>00083 <emphasis role="comment">//&#32;&#32;double&#32;r_splash&#32;=&#32;1.0;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00084"/>00084 <emphasis role="comment">//&#32;&#32;double&#32;x_splash&#32;=&#32;3.0;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00085"/>00085 <emphasis role="comment">//&#32;&#32;double&#32;y_splash&#32;=&#32;3.0;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00086"/>00086 <emphasis role="comment">//&#32;&#32;for&#32;(int&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;imax&#32;-&#32;1;&#32;i++)</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00087"/>00087 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(int&#32;j&#32;=&#32;1;&#32;j&#32;&lt;&#32;jmax&#32;-&#32;1;&#32;j++)</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00088"/>00088 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00089"/>00089 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;double&#32;x&#32;=&#32;dx&#32;*&#32;i;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00090"/>00090 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;double&#32;y&#32;=&#32;dy&#32;*&#32;j;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00091"/>00091 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00092"/>00092 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;double&#32;dist&#32;=&#32;sqrt(pow(x&#32;-&#32;x_splash,&#32;2.0)&#32;+&#32;pow(y&#32;-&#32;y_splash,&#32;2.0));</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00093"/>00093 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00094"/>00094 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(dist&#32;&lt;&#32;r_splash)</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00095"/>00095 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00096"/>00096 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;double&#32;h&#32;=&#32;5.0&#32;*&#32;(cos(dist&#32;/&#32;r_splash&#32;*&#32;M_PI)&#32;+&#32;1.0);</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00097"/>00097 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00098"/>00098 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grid[i][j]&#32;=&#32;h;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00099"/>00099 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_grid[i][j]&#32;=&#32;h;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00100"/>00100 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00101"/>00101 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00102"/>00102 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00103"/>00103 <emphasis role="comment">//&#32;&#32;while&#32;(t&#32;&lt;&#32;t_max)</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00104"/>00104 <emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00105"/>00105 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;do_iteration();</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00106"/>00106 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00107"/>00107 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(t_out&#32;&lt;=&#32;t)</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00108"/>00108 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00109"/>00109 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cout&#32;&lt;&lt;&#32;&quot;output:&#32;&quot;&#32;&lt;&lt;&#32;out_cnt&#32;&lt;&lt;&#32;&quot;\tt:&#32;&quot;&#32;&lt;&lt;&#32;t&#32;&lt;&lt;&#32;&quot;\titeration:&#32;&quot;&#32;&lt;&lt;&#32;it&#32;&lt;&lt;&#32;endl;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00110"/>00110 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;grid_to_file(out_cnt);</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00111"/>00111 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;out_cnt++;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00112"/>00112 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t_out&#32;+=&#32;dt_out;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00113"/>00113 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00114"/>00114 <emphasis role="comment">//</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00115"/>00115 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;it++;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00116"/>00116 <emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00117"/>00117 <emphasis role="comment">//&#32;&#32;return&#32;0;</emphasis>
<anchor xml:id="__serial_wave_solver_8cpp_source_1l00118"/>00118 <emphasis role="comment">//}</emphasis>
</programlisting></section>
