<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__m_p_i_datatype_8cpp_source" xml:lang="en-US">
<title>MPIDatatype.cpp</title>
<indexterm><primary>AS/MPIDatatype.cpp</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__m_p_i_datatype_8cpp_source_1l00001"/>00001 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;mpi.h&gt;</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00004"/>00004 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&quot;MPIDatatype.h&quot;</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00006"/>00006 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00007"/>00007 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00008"/>00008 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00009"/>00009 <emphasis role="comment">//&#32;-------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00010"/>00010 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00011"/>00011 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;T&gt;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00012"/>00012 <link linkend="_class_m_p_i___data">MPI_Data&lt;T&gt;::MPI_Data</link>()&#32;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00013"/>00013 {
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;MPI&#32;Types&#32;for&#32;the&#32;&#32;cells&#32;to&#32;null</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;MPI_Datatype&#32;Left_Type&#32;=&#32;MPI_DATATYPE_NULL;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00016"/>00016 &#32;&#32;&#32;&#32;MPI_Datatype&#32;Right_Type&#32;=&#32;MPI_DATATYPE_NULL;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;MPI_Datatype&#32;Top_Type&#32;=&#32;MPI_DATATYPE_NULL;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;MPI_Datatype&#32;Bottom_Type&#32;=&#32;MPI_DATATYPE_NULL;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00019"/>00019 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;MPI&#32;Types&#32;for&#32;the&#32;Ghost&#32;cells&#32;to&#32;null</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;MPI_Datatype&#32;Left_Ghost_Type&#32;=&#32;MPI_DATATYPE_NULL;&#32;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;MPI_Datatype&#32;Right_Ghost_Type&#32;=&#32;MPI_DATATYPE_NULL;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;MPI_Datatype&#32;Top_Ghost_Type&#32;=&#32;MPI_DATATYPE_NULL;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;MPI_Datatype&#32;Bottom_Ghost_Type&#32;=&#32;MPI_DATATYPE_NULL;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00026"/>00026 }
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00027"/>00027 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00028"/>00028 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00029"/>00029 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;T&gt;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00030"/>00030 <link linkend="_class_m_p_i___data">MPI_Data&lt;T&gt;::~MPI_Data</link>()
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00031"/>00031 {
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;deleting&#32;regular&#32;datatypes</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;MPI_Type_free(&amp;Left_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;MPI_Type_free(&amp;Right_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;MPI_Type_free(&amp;Top_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;MPI_Type_free(&amp;Bottom_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00037"/>00037 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;deleting&#32;ghost&#32;datatypes</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;MPI_Type_free(&amp;Left_Ghost_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;MPI_Type_free(&amp;Right_Ghost_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;MPI_Type_free(&amp;Top_Ghost_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;MPI_Type_free(&amp;Bottom_Ghost_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00043"/>00043 }
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00044"/>00044 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00045"/>00045 <emphasis role="comment">//&#32;-------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00046"/>00046 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00047"/>00047 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;T&gt;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00048"/>00048 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_m_p_i___data">MPI_Data&lt;T&gt;::send_data</link>(<link linkend="_class_domain">Domain&lt;T&gt;</link>&#32;&amp;Dom,&#32;MPI_Datatype&#32;MDataType,&#32;<emphasis role="keywordtype">int</emphasis>&#32;send_to,&#32;MPI_Request*&#32;request)
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00049"/>00049 {
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Function&#32;that&#32;facilitates&#32;the&#32;ease&#32;of&#32;sends&#32;the&#32;MPI&#32;Data&#32;Type</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;MPI_Isend(Dom.current_grid_1d,&#32;1,&#32;MDataType,&#32;send_to,&#32;tag_num,&#32;MPI_COMM_WORLD,&#32;request);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00052"/>00052 }
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00053"/>00053 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00054"/>00054 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00055"/>00055 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;T&gt;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00056"/>00056 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_m_p_i___data">MPI_Data&lt;T&gt;::recv_data</link>(<link linkend="_class_domain">Domain&lt;T&gt;</link>&amp;&#32;Dom,&#32;MPI_Datatype&#32;MDataType,&#32;<emphasis role="keywordtype">int</emphasis>&#32;receive_from,&#32;MPI_Request*&#32;request)
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00057"/>00057 {
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Function&#32;that&#32;facilitates&#32;the&#32;ease&#32;of&#32;receives&#32;the&#32;MPI&#32;Data&#32;Type</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;MPI_Irecv(Dom.current_grid_1d,&#32;1,&#32;MDataType,&#32;receive_from,&#32;tag_num,&#32;MPI_COMM_WORLD,&#32;request);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00060"/>00060 }
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00061"/>00061 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00062"/>00062 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00063"/>00063 <emphasis role="comment">//&#32;-------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00064"/>00064 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00065"/>00065 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;T&gt;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00066"/>00066 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_m_p_i___data">MPI_Data&lt;T&gt;::CreateMPI_Types</link>(<link linkend="_class_domain">Domain&lt;T&gt;</link>&amp;&#32;Dom)
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00067"/>00067 {
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00068"/>00068 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;vectors&#32;because&#32;we&#32;dont&#32;explicitly&#32;know&#32;the&#32;lengths</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;vector&lt;int&gt;&#32;block_lengths;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;vector&lt;MPI_Aint&gt;&#32;displacements;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;MPI_Aint&#32;add_start;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;vector&lt;MPI_Datatype&gt;&#32;typelist;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00074"/>00074 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00075"/>00075 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Resize&#32;all&#32;lengths&#32;of&#32;vector&#32;to&#32;Dom.sub_imax-2</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;block_lengths.resize(Dom.sub_imax&#32;-&#32;2);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;displacements.resize(Dom.sub_imax&#32;-&#32;2);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;typelist.resize(Dom.sub_imax&#32;-&#32;2);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00080"/>00080 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;the&#32;address&#32;and&#32;set&#32;the&#32;object&#32;to&#32;the&#32;start&#32;of&#32;the&#32;address</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Explanation:&#32;This&#32;is&#32;done&#32;so&#32;that&#32;we&#32;can&#32;send&#32;the&#32;data&#32;by&#32;referencing&#32;the&#32;object</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;MPI_Get_address(Dom.current_grid_1d,&#32;&amp;add_start);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00084"/>00084 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00085"/>00085 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00086"/>00086 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;MPI_DATATYPE&#32;1&#32;:&#32;LEFT_TYPE&#32;MPI&#32;-&#32;Regular</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Set&#32;each&#32;of&#32;the&#32;dataType&#32;variables</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;to&#32;the&#32;correct&#32;addresses&#32;depending&#32;on&#32;the&#32;location</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;in&#32;the&#32;array</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00093"/>00093 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;the&#32;variables</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;Dom.sub_imax&#32;-&#32;2;&#32;i++)
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;{
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typelist[i]&#32;=&#32;MPI_DOUBLE;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;block_lengths[i]&#32;=&#32;1;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MPI_Get_address(&amp;Dom.current_grid_2d[i&#32;+&#32;1][1],&#32;&amp;displacements[i]);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;displacements[i]&#32;=&#32;displacements[i]&#32;-&#32;add_start;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00101"/>00101 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00102"/>00102 &#32;&#32;&#32;&#32;}
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;the&#32;dataType</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;MPI_Type_create_struct((Dom.sub_imax&#32;-&#32;2),&#32;block_lengths.data(),&#32;displacements.data(),&#32;typelist.data(),&#32;&amp;Left_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Commit&#32;to&#32;use</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;MPI_Type_commit(&amp;Left_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00107"/>00107 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00108"/>00108 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00109"/>00109 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;MPI_DATATYPE&#32;2&#32;:&#32;LEFT_TYPE&#32;MPI&#32;-&#32;GHOST</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00112"/>00112 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;Dom.sub_imax&#32;-&#32;2;&#32;i++)
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00114"/>00114 &#32;&#32;&#32;&#32;{
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typelist[i]&#32;=&#32;MPI_DOUBLE;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;block_lengths[i]&#32;=&#32;1;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MPI_Get_address(&amp;Dom.current_grid_2d[i&#32;+&#32;1][0],&#32;&amp;displacements[i]);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;displacements[i]&#32;=&#32;displacements[i]&#32;-&#32;add_start;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;}
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;the&#32;dataType</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;MPI_Type_create_struct(Dom.sub_imax&#32;-&#32;2,&#32;block_lengths.data(),&#32;displacements.data(),&#32;typelist.data(),&#32;&amp;Left_Ghost_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Commit&#32;to&#32;use</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;MPI_Type_commit(&amp;Left_Ghost_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00124"/>00124 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00125"/>00125 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00126"/>00126 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;MPI_DATATYPE&#32;3&#32;:RIGHT_TYPE&#32;MPI&#32;-&#32;Regular</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;only&#32;difference&#32;is&#32;that&#32;the&#32;address&#32;to&#32;store&#32;in&#32;the&#32;</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;2D&#32;array&#32;is&#32;[i][Dom.sub_jmax-1]</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00132"/>00132 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;In+ialize&#32;the&#32;variables&#32;for&#32;all&#32;the&#32;grids</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;Dom.sub_imax&#32;-&#32;2;&#32;i++)
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;{
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typelist[i]&#32;=&#32;MPI_DOUBLE;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;block_lengths[i]&#32;=&#32;1;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MPI_Get_address(&amp;Dom.current_grid_2d[i&#32;+&#32;1][Dom.sub_jmax&#32;-&#32;2],&#32;&amp;displacements[i]);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;displacements[i]&#32;=&#32;displacements[i]&#32;-&#32;add_start;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;}
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;the&#32;dataType</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Note:&#32;We&#32;use&#32;.data()&#32;because&#32;they&#32;are&#32;vectors</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;MPI_Type_create_struct((Dom.sub_imax&#32;-&#32;2),&#32;block_lengths.data(),&#32;displacements.data(),&#32;typelist.data(),&#32;&amp;Right_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Commit&#32;to&#32;use</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;MPI_Type_commit(&amp;Right_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00146"/>00146 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00147"/>00147 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00148"/>00148 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;MPI_DATATYPE&#32;4&#32;:RIGHT_TYPE&#32;MPI&#32;-&#32;Ghost</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;the&#32;variables&#32;for&#32;the&#32;ghost&#32;right&#32;grids</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;Dom.sub_imax&#32;-&#32;2;&#32;i++)
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;{
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;typelist[i]&#32;=&#32;MPI_DOUBLE;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;block_lengths[i]&#32;=&#32;1;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MPI_Get_address(&amp;Dom.current_grid_2d[i&#32;+&#32;1][Dom.sub_jmax&#32;-&#32;1],&#32;&amp;displacements[i]);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;displacements[i]&#32;=&#32;displacements[i]&#32;-&#32;add_start;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;}
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;the&#32;dataType</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Note:&#32;We&#32;use&#32;.data()&#32;because&#32;they&#32;are&#32;vectors</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;MPI_Type_create_struct((Dom.sub_imax&#32;-&#32;2),&#32;block_lengths.data(),&#32;displacements.data(),&#32;typelist.data(),&#32;&amp;Right_Ghost_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Commit&#32;to&#32;use</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;MPI_Type_commit(&amp;Right_Ghost_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00165"/>00165 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00166"/>00166 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00167"/>00167 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;TOP&#32;AND&#32;BOTTOM</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00170"/>00170 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Note:&#32;the&#32;top&#32;and&#32;bottom&#32;are&#32;stored&#32;in&#32;contiguous&#32;memory&#32;so&#32;dont&#32;need&#32;</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;to&#32;be&#32;sent&#32;as&#32;different&#32;types</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00174"/>00174 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00175"/>00175 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00176"/>00176 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MPI_DATATYPE&#32;5&#32;:&#32;TOP&#32;-&#32;REGULAR</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00180"/>00180 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;variables</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;typelist[0]&#32;=&#32;MPI_DOUBLE;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;block_lengths[0]&#32;=&#32;Dom.sub_jmax&#32;-&#32;2;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;MPI_Get_address(&amp;Dom.current_grid_2d[1][1],&#32;&amp;displacements[0]);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;displacements[0]&#32;=&#32;displacements[0]&#32;-&#32;add_start;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;the&#32;dataType</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;MPI_Type_create_struct(1,&#32;block_lengths.data(),&#32;displacements.data(),&#32;typelist.data(),&#32;&amp;Top_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Commit&#32;to&#32;use</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00189"/>00189 &#32;&#32;&#32;&#32;MPI_Type_commit(&amp;Top_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00190"/>00190 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00191"/>00191 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00192"/>00192 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MPI_DATATYPE&#32;6&#32;:&#32;TOP&#32;-&#32;GHOST</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00195"/>00195 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;variables</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;typelist[0]&#32;=&#32;MPI_DOUBLE;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;block_lengths[0]&#32;=&#32;Dom.sub_jmax&#32;-&#32;2;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;MPI_Get_address(&amp;Dom.current_grid_2d[0][1],&#32;&amp;displacements[0]);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;displacements[0]&#32;=&#32;displacements[0]&#32;-&#32;add_start;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;the&#32;dataType</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;MPI_Type_create_struct(1,&#32;block_lengths.data(),&#32;displacements.data(),&#32;typelist.data(),&#32;&amp;Top_Ghost_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Commit&#32;to&#32;use</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00203"/>00203 &#32;&#32;&#32;&#32;MPI_Type_commit(&amp;Top_Ghost_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00204"/>00204 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00205"/>00205 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00206"/>00206 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00208"/>00208 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MPI_DATATYPE&#32;7&#32;:&#32;BOTTOM&#32;-&#32;REGULAR</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00210"/>00210 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;variables</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;typelist[0]&#32;=&#32;MPI_DOUBLE;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;block_lengths[0]&#32;=&#32;Dom.sub_jmax&#32;-&#32;2;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;MPI_Get_address(&amp;Dom.current_grid_2d[Dom.sub_imax&#32;-&#32;2][1],&#32;&amp;displacements[0]);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;displacements[0]&#32;=&#32;displacements[0]&#32;-&#32;add_start;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00215"/>00215 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;the&#32;dataType</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;MPI_Type_create_struct(1,&#32;block_lengths.data(),&#32;displacements.data(),&#32;typelist.data(),&#32;&amp;Bottom_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Commit&#32;to&#32;use</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;MPI_Type_commit(&amp;Bottom_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00219"/>00219 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00220"/>00220 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00221"/>00221 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00222"/>00222 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MPI_DATATYPE&#32;8&#32;:&#32;BOTTOM&#32;-&#32;GHOST</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;------------------------------------------------------------------------------------------------------------------------|</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;variables</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;typelist[0]&#32;=&#32;MPI_DOUBLE;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;block_lengths[0]&#32;=&#32;Dom.sub_jmax&#32;-&#32;2;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;MPI_Get_address(&amp;Dom.current_grid_2d[Dom.sub_imax&#32;-&#32;1][1],&#32;&amp;displacements[0]);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;displacements[0]&#32;=&#32;displacements[0]&#32;-&#32;add_start;
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Create&#32;the&#32;dataType</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;MPI_Type_create_struct(1,&#32;block_lengths.data(),&#32;displacements.data(),&#32;typelist.data(),&#32;&amp;Bottom_Ghost_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Commit&#32;to&#32;use</emphasis>
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;MPI_Type_commit(&amp;Bottom_Ghost_Type);
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00235"/>00235 
<anchor xml:id="__m_p_i_datatype_8cpp_source_1l00236"/>00236 }
</programlisting></section>
